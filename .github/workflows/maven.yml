# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Todo App CICD

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_and_deploy:

    runs-on: [self-hosted, X64, Linux, NODE2]

    steps:
    - uses: actions/checkout@v3
#     - name: Set up JDK 11
#       uses: actions/setup-java@v3
#       with:
#         java-version: '11'
#         distribution: 'temurin'
#         cache: maven
        
    - name: Build with Maven
      run: mvn clean install

    - uses: mr-smithers-excellent/docker-build-push@v5
      name: Build & push Docker image
      with:
        image: oladayur/registration
        tags: v3
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Install and Start Minikube
      uses: medyagh/setup-minikube@master
    
    - name: sleep for 60 seconds
      run: sleep 60
      
    - name: Deploy to minikube
      run: |
        kubectl apply -f k8s/
        kubectl get all
        kubectl get ep
        
    - name: Test service URLs
      run: |
        minikube service list
        minikube service taskapp-svc --url
        # echo "------------------opening the service------------------"
        # curl $(minikube service task-svc --url) 
    
    # - name: create kubeconfig
    #   run: |
    #     mkdir ${HOME}/.kube
    #     echo "${{ secrets.KUBE_CONFIG }}" > ${HOME}/.kube/config
    #     cat ${HOME}/.kube/config

    # - name: use use-context
    #   run: kubectl config use-context docker-desktop

    # - name: Deploy to K8s
    #   run: kubectl apply -f k8s
#     - name: create kubeconfig
#       run: |
#         mkdir ${HOME}/.kube
#         echo "${{ secrets.KUBE_CONFIG }}" > ${HOME}/.kube/config
#         cat ${HOME}/.kube/config

#     - name: use use-context
#       run: kubectl config use-context docker-desktop

#     - name: Deploy to K8s
#       run: kubectl apply -f k8s
      
 
